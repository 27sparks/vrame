<% field = nil unless defined?(field) %>
<% visible_type = field ? /([a-zA-z]+)$/.match(field.class.name)[1] : '' %>
<% class_name = (field and %w(Asset Collection Select MultiSelect).include?(visible_type) ? ' has-field-options' : '') %>

<tr class="schema-field<%= class_name %>">

<td class="type">
	<% if field %>
		<input type="hidden" name="category[schema][][uid]" value="<%=h field.uid %>" />
	<% end %>
	<input type="hidden" name="category[schema][][type]" value="<%=h field.class.name if field %>" class="internal-field-type" />
	<p class="visible-field-type"><%=h visible_type %></p>
</td>

<td class="title-name">
	<p>
		<label>Titel:</label>
		<input type="text" name="category[schema][][title]" class="title" value="<%= h(field.try(:title)) %>" />
	</p>
	<p>
		<label>Schl√ºssel:</label>
		<input type="text" name="category[schema][][name]" class="name" value="<%= h(field.try(:name)) %>" />
	</p>
</td>

<td class="description">
	<textarea name="category[schema][][description]" class="description"><%= h(field.try(:description)) %></textarea>
</td>

<td class="required">
	<input type="hidden" name="category[schema][][required]" value="<%= field.try(:required) %>" class="required-field" /> 
	<label class="required">
		<input type="checkbox" <%= 'checked="checked"' if field.try(:required) %> />
		erforderlich?
	</label>
</td>

<td class="actions">
	<a href="#" class="smaller remove button invert">Entfernen</a>
</td>

</tr>

<%# Field options %>
<% if field.is_a?(JsonObject::Types::Asset) || field.is_a?(JsonObject::Types::Collection) %>
	<%= render :partial => 'vrame/categories/schema_builder/asset_styles', :locals => { :field => field } %>
<% elsif field.is_a?(JsonObject::Types::Select) || field.is_a?(JsonObject::Types::MultiSelect) %>
	<%= render :partial => 'vrame/categories/schema_builder/select_options', :locals => { :field => field } %>
<% end %>
